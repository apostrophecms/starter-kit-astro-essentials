---
import {
  getAttachmentUrl,
  getAttachmentSrcset,
  getFocalPoint,
  getWidth,
  getHeight,
} from "@apostrophecms/apostrophe-astro/lib/attachment.js";
import { slugify } from "@apostrophecms/apostrophe-astro/lib/util.js";
import placeholderImg from "../../public/images/image-widget-placeholder.jpg";
import Figure from "../components/Figure.astro";

const { widget = {} } = Astro.props;
const placeholder = widget?.aposPlaceholder;
const imageObj = widget?._image?.[0];

const src = placeholder ? placeholderImg.src : getAttachmentUrl(imageObj);

const srcset = placeholder ? "" : getAttachmentSrcset(imageObj);
const objectPosition = placeholder ? "center center" : getFocalPoint(imageObj);
// Only add width/height if they exist to prevent layout shift
const width = imageObj ? getWidth(imageObj) : undefined;
const height = imageObj ? getHeight(imageObj) : undefined;
const aspectRatio = width && height ? `${width}/${height}` : undefined;

let link = {
  url: widget.linkHref,
  title: widget.linkHrefTitle || widget.caption,
  target: widget.linkTarget,
  rel: null,
};
const image = {
  src,
  alt: imageObj?.alt || imageObj?.attachment?._alt || "",
  style: "img-widget__image",
  srcset,
  objectPosition,
  width,
  height,
  aspectRatio,
};
let style = "img-widget";

switch (widget.linkTo) {
  case "none": {
    link = null;
    break;
  }
  case "_url": {
    link.rel = widget.target === "_blank" ? "noopener noreferrer" : null;
    break;
  }
  default: {
    // slugify the linkTo value to reference the widget field.
    const name = "_" + slugify(widget.linkTo);
    const item = widget[name]?.[0];
    link.url = item?._url;
    link.title = widget.linkTitle || item?.title;
    break;
  }
}
---

<Figure {image} {link} caption={widget.caption} {style} />
